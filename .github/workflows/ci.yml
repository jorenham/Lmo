name: CI

on:
  push:
    branches:
      - master
      - dev
  pull_request:
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.sha }}
  cancel-in-progress: true

jobs:
  lint:
    timeout-minutes: 10

    strategy:
      fail-fast: false

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - uses: scientific-python/repo-review@v0.11.1
        with:
          plugins: sp-repo-review

      - name: install poetry
        run: |
          pipx install poetry
          poetry config virtualenvs.create true --local
          poetry config virtualenvs.in-project true --local

      - uses: actions/setup-python@v5
        with:
          python-version: "3.10"
          cache: poetry

      - name: poetry check
        run: poetry check

      - name: poetry install
        run: poetry install --without debug,docs --with pandas

      - name: codespell
        run: poetry run codespell .

      - name: ruff check
        run: poetry run ruff check --output-format=github

      - name: basedpyright
        run: poetry run basedpyright

      - name: basedpyright --verifytypes
        run: poetry run basedpyright --ignoreexternal --verifytypes optype

  test:
    timeout-minutes: 20

    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest]
        python-version: ["3.10", "3.12", "3.13-dev"]
        pandas: ["without", "with"]
        exclude:
          - python-version: "3.12"
            pandas: "with"
          - python-version: "3.13-dev"
            pandas: "with"
          - python-version: "3.13-dev"
            os: windows-latest

    runs-on: ${{ matrix.os }}

    steps:
      - name: install scipy deps
        if: ${{ matrix.python-version == '3.13-dev' }}
        # run: sudo apt-get install libopenblas-dev
        run: >
          sudo apt-get install
          gcc
          g++
          gfortran
          libopenblas-dev
          liblapack-dev
          pkg-config

      - uses: actions/checkout@v4.1.7

      - name: install poetry
        run: pipx install poetry

      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: poetry
          cache-dependency-path: poetry.lock

      - name: poetry install
        run: >
          poetry install
          --without debug,docs
          --with github
          --${{ matrix.pandas }} pandas

      - name: pytest
        run: poetry run pytest
