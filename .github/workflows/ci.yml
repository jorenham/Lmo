name: CI

on:
  push:
    branches:
      - master
      - dev
  pull_request:
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.sha }}
  cancel-in-progress: true

jobs:
  lint:
    timeout-minutes: 10

    strategy:
      fail-fast: false

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: install poetry
        run: pipx install poetry

      - uses: actions/setup-python@v5
        with:
          python-version: "3.10"
          cache: poetry

      - name: poetry check
        run: poetry check

      - name: poetry install
        run: >
          poetry install
          --without debug,docs
          --with pandas

      - name: codespell
        run: poetry run codespell .

      - name: ruff check
        run: poetry run ruff check --output-format=github .

      - name: pyright
        run: poetry run pyright

  test:
    timeout-minutes: 15

    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest]
        python-version: ["3.10", "3.12", "3.13.0-beta.2"]
        pandas: ["without", "with"]
        exclude:
          - python-version: "3.13.0-beta.2"
            os: windows-latest
          - python-version: "3.13.0-beta.2"
            panada: "with"

    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v4

      - name: install scipy deps
        uses: awalsh128/cache-apt-pkgs-action@latest
        if: ${{ matrix.python-version == '3.13.0-beta.2' }}
        with:
          packages: gcc g++ gfortran libopenblas-dev liblapack-dev pkg-config
          version: 1.0

      - name: install poetry
        run: pipx install poetry

      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: poetry

      - name: poetry install
        run: >
          poetry install
          --without debug,docs
          --with github
          --${{ matrix.pandas }} pandas

      - name: pytest
        run: poetry run pytest
