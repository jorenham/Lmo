[build-system]
requires = ["poetry-core", "oldest-supported-numpy"]
build-backend = "poetry.core.masonry.api"


[tool.poetry]
name = "lmo"
version = "0.8.0"
description = "L-Moments for robust statistics."
authors = ["Joren Hammudoglu <jhammudoglu@gmail.com>"]
readme = "README.md"
license = "BSD-3-Clause"
homepage = "https://jorenham.github.io/lmo/"
repository = "https://github.com/jorenham/lmo/"
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: Financial and Insurance Industry",
    "Intended Audience :: Science/Research",
    "Natural Language :: English",
    "Operating System :: OS Independent",
    "Topic :: Scientific/Engineering",
    "Topic :: Utilities",
    "Typing :: Typed",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    # "Programming Language :: Python :: 3.12",
]

[tool.poetry.urls]
Documentation = "https://jorenham.github.io/lmo/"
"Bug Tracker" = "https://github.com/jorenham/lmo/issues"

[tool.poetry.dependencies]
python = "^3.10"
numpy = "^1.22"
scipy = [
    { version = "^1.9", python = "<3.12" },
    { version = "^1.11", python = "<3.13" },
]
typing_extensions = { version = "^4.1", python = "<3.11"}

[tool.poetry.group.dev.dependencies]
pytest = "^7.4"
hypothesis = {extras = ["numpy"], version = "^6.80"}
pyright = "^1.1"
ruff = ">=0.0.277,<1.0"

[tool.poetry.group.docs.dependencies]
mkdocs = "^1.4"
mkdocs-material = "^9.1"
mkdocs-include-markdown-plugin = { version = ">=4.0", python = "<3.12" }
mkdocstrings = {extras = ["python"], version = ">=0.22,<1.0"}

[tool.poetry.group.debug.dependencies]
ipython = "^8.14"


[tool.pytest.ini_options]
minversion = "7.0"
addopts = [
    "-ra",
    "-W error",
    "--showlocals",
    "--strict-markers",
    "--strict-config",
    "--doctest-modules",
]
doctest_optionflags = [
    "NORMALIZE_WHITESPACE",
    "IGNORE_EXCEPTION_DETAIL",
    "ELLIPSIS",
]


[tool.pyright]
include = ["lmo"]
exclude = [
    "**/__pycache__",
    "**/.pytest_cache",
    "**/.hypothesis",
    "**/.pytest_cache",
    "**/.ruff_cache",
    "**/.vscode",
    "**/.idea",
    ".git",
    ".github",
    "dist",
    "docs",
    "site",
    "tests",
]
venv = ".venv"
pythonVersion = "3.10"
pythonPlatform = "All"
typeCheckingMode = "strict"
reportMissingImports = true
reportMissingTypeStubs = true
reportUnusedImport = true
reportUnusedClass = true
reportUnusedFunction = true
reportUnusedVariable = true
reportDuplicateImport = true
useLibraryCodeForTypes = false


[tool.ruff]
target-version = "py310"

src = ["lmo"]
extend-exclude = ["tests"]

line-length = 80
format = "grouped"
select = [
    "F",    # pyflakes
    "E",    # pycodestyle error ("W" for warning)
    "C90",  # mccabe
    "I",    # isort
    "N",    # pep8-naming
    "D",    # pydocstyle
    "UP",   # pyupgrade
    "B",    # flake8-bugbear
    "A",    # flake8-builtins
    "COM",  # flake8-commas
    "C4",   # flake8-comprehensions
    "EM",   # flake8-errmsg
    "FA",   # flake8-future-annotations
    "ISC",  # flake8-implicit-str-concat
    "ICN",  # flake8-import-conventions
    "INP",  # flake8-no-pep420
    "PIE",  # flake8-pie
    "T20",  # flake8-print
    "Q",    # flake8-quotes
    "RET",  # flake8-return
    "SIM",  # flake8-simplify
    "TD",   # flake8-todos
    "TRY",  # tryceratops
    "NPY",  # NumPy-specific rules
    "PERF", # perflint,
    "RUF",  # Ruff-specific rules
]
ignore = [
    "D205", # blank-line-after-summary
    "D212", # multi-line-summary-first-line
    "B023", # function-uses-loop-variable
]

[tool.ruff.pydocstyle]
convention = "google"
ignore-decorators = [
    "typing.overload",
]

[tool.ruff.isort]
case-sensitive = true
combine-as-imports = true
force-wrap-aliases = true

[tool.ruff.flake8-quotes]
inline-quotes = "single"
